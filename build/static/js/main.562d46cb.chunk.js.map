{"version":3,"sources":["images/tech.jpeg","presentation/modalPop.js","components/message.js","components/about.js","components/displays.js","components/NavigationBar.js","presentation/jumbo.js","presentation/signup.js","components/Login.js","App.js","index.js"],"names":["module","exports","ModalPop","closePopup","handleSubmit","props","children","id","Modal","Dialog","Header","Title","title","Body","Footer","Button","variant","onClick","button","Message","state","message","e","ReactDOM","findDOMNode","querySelector","style","display","handlechange","setState","target","value","console","log","sessionStorage","getItem","data","match","params","selectedDisplay","session","fetch","method","headers","body","JSON","stringify","then","response","json","window","location","reload","catch","error","this","Form","Group","controlId","Label","Control","as","rows","onChange","Component","About","Container","Displays","displayName","displays","selectedIndex","setItem","handleDispNameChange","event","history","push","displayPopup","preventDefault","createDisplay","name","alert","length","_id","map","key","className","placeholder","type","Styles","Styled","div","NavigationBar","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Item","Link","techImage","Jumbo","Jumbotron","fluid","Signup","username","password","handleUsernameChange","handlePasswordChange","signupHandlar","onSubmit","Login","sesseion","handleLogin","pwd","accepted","App","exact","path","component","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.562d46cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tech.405635f5.jpeg\";","import React from 'react';\r\nimport {Modal, Button} from 'react-bootstrap';\r\nconst ModalPop = ({closePopup, handleSubmit, props, children})=>{\r\n    return ( \r\n        <div id = \"bg-modal\">  \r\n          <Modal.Dialog>\r\n            <Modal.Header>\r\n                 <Modal.Title>{props.title}</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n              {children}\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n                <Button variant=\"primary\" onClick ={handleSubmit}>{props.button}</Button>\r\n            </Modal.Footer>\r\n        </Modal.Dialog> \r\n      </div>\r\n    );\r\n}\r\nexport default ModalPop;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Form} from 'react-bootstrap';\r\nimport ModalPop from '../presentation/modalPop';\r\nclass Message extends Component {\r\n    state = { \r\n        message: \"\"\r\n     }\r\n    closePopup= (e)=>{\r\n        const node = ReactDOM.findDOMNode(this);\r\n        node.querySelector('#bg-modal').style.display = 'none';\r\n    } \r\n\r\n    handlechange =(e)=>{\r\n        this.setState({message: e.target.value});\r\n    }\r\n\r\n    handleSubmit=(e)=>{\r\n       console.log(sessionStorage.getItem('session'));\r\n        \r\n        let data = {\r\n            display: this.props.match.params.selectedDisplay, \r\n            message: this.state.message,\r\n            session: sessionStorage.getItem('session')\r\n        }\r\n        fetch('https://iot-display.herokuapp.com/message/set', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n            body: JSON.stringify(data)\r\n        }).then(response => {\r\n           return response.json();\r\n        }).then(data => {\r\n            //console.log(data)\r\n           window.location.reload();\r\n        }).catch(error => console.error('error', error));\r\n        \r\n    }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <ModalPop closePopup={this.closePopup}\r\n                handleSubmit= {this.handleSubmit} \r\n                props = {{title: 'message', body: 'enter the message', button: 'send message' }}>\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Enter the message here</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows=\"3\" onChange={this.handlechange} />\r\n                    </Form.Group>\r\n                </ModalPop>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Message;","import React, { Component } from 'react';\r\nimport {Container} from 'react-bootstrap';\r\nclass About extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <Container>\r\n                <h2>About</h2>\r\n                <p>\r\n                Lorem ipsum dolor sit amet, morbi facilisis\r\n                 elit euismod taciti, mollis lectus mi \r\n                 lobortis feugiat torquent lacus, \r\n                 curabitur et nunc, nec integer \r\n                 ornare. Lorem in nulla at eleifend orci, \r\n                 ultrices nam turpis pellentesque eros suspendisse \r\n                 lectus, sed lorem elit ut ipsum imperdiet vestibulum. \r\n                 In integer sed aliquam dui, molestie suspendisse eleifend. \r\n                 Quis nulla blandit ante, sem consequat dictum nec massa mauris inceptos, \r\n                 maecenas mauris tempus nulla sed lacus id. Officia nibh ligula lectus est diam, \r\n                 fusce praesent libero eleifend, magnis rutrum, pretium amet tellus. Cursus libero \r\n                 nisl praesent orci cursus. Sed et, in dolores. Erat libero. Tortor suspendisse in \r\n                 convallis orci wisi nunc, turpis faucibus blandit ac vitae donec quisque, at suscipit \r\n                 nonummy nascetur, aliquam porttitor nullam ac massa vulputate, aspernatur a sit in.\r\n                </p>\r\n            </Container>\r\n         );\r\n    }\r\n}\r\n \r\nexport default About;","import React, { Component } from 'react';\r\nimport {Form, Container, Button} from 'react-bootstrap';\r\nimport ReactDOM from 'react-dom';\r\nclass Displays extends Component {\r\n    state = {\r\n        selectedDisplay: \"\",\r\n        displayName:\"\",\r\n        displays:[],\r\n        session: this.props.match.params.session\r\n      }\r\n    componentDidMount() {\r\n        sessionStorage.setItem('session', this.state.session)\r\n        let data = {session: this.state.session}\r\n        fetch('https://iot-display.herokuapp.com/display/get/all', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n            body: JSON.stringify(data)\r\n        }).then(response => {\r\n           return response.json();\r\n        }).then(data =>{\r\n            console.log(data.displays); \r\n            this.setState({displays:data.displays}) \r\n            if(data.displays.length > 0){\r\n                this.setState({selectedDisplay:data.displays[0]._id})\r\n                sessionStorage.setItem('display', this.state.selectedDisplay);\r\n            }  \r\n        }).catch(error =>{ \r\n            console.error('error', error)\r\n        });\r\n    }\r\n    handlechange =(e)=>{\r\n        this.setState({selectedDisplay: e.target.children[e.target.selectedIndex].id});\r\n        sessionStorage.setItem('display', this.state.selectedDisplay);\r\n    }\r\n    handleDispNameChange= e=>{\r\n        this.setState({displayName:e.target.value})\r\n    }\r\n\r\n    handleSubmit = (event) =>{\r\n        this.props.history.push(`/message/${this.state.selectedDisplay}`)\r\n    }\r\n\r\n    displayPopup=event=>{\r\n        event.preventDefault();\r\n        const node = ReactDOM.findDOMNode(this);\r\n        node.querySelector('.bg-modal').style.display= 'flex';\r\n    }\r\n    createDisplay=event =>{\r\n        event.preventDefault()\r\n        let data = {name:this.state.displayName, session:this.props.match.params.session}\r\n        fetch('https://iot-display.herokuapp.com/display/new', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n            body: JSON.stringify(data)\r\n        }).then(response => {\r\n           return response.json();\r\n        }).then(data =>{\r\n            this.closePopup()\r\n            window.location.reload();\r\n            console.log(data); \r\n        }).catch(error =>{ \r\n            alert('username already taken try again');\r\n            console.error('error', error)\r\n        });\r\n    }\r\n    closePopup = event =>{\r\n        const node = ReactDOM.findDOMNode(this);\r\n        node.querySelector('.bg-modal').style.display= 'none';\r\n    }\r\n    render() { \r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Form>\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                            <Form.Label>Select your display</Form.Label>\r\n                            <Form.Control as=\"select\" onChange= {this.handlechange}>\r\n                            {this.state.displays.length > 0\r\n                                ?this.state.displays.map(display =>{\r\n                                return<option id={display._id} key= {display._id}>{display.name}</option>\r\n                                })\r\n                                :<option>no display</option>\r\n                            }\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Form>\r\n                    <Button className=\"btn\" onClick={this.handleSubmit} variant=\"primary\">select</Button>\r\n                    <Button  onClick= {this.displayPopup} variant=\"primary\">create new display</Button>\r\n                    \r\n                    <div className={\"bg-modal\"}>\r\n                        <div className={\"modal-pop-up\"}>\r\n                        <div className=\"close\"  onClick={this.closePopup}>+</div>\r\n                            <form className =\"username\">\r\n                                <input\r\n                                    onChange ={this.handleDispNameChange} \r\n                                    value={this.state.displayName}\r\n                                    placeholder=\"enter name...\"\r\n                                    type=\"text\"/>\r\n                                <button  onClick = {this.createDisplay} className={\"tbtn\"}>\r\n                                        create\r\n                                </button>   \r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Displays;","import React from 'react';\r\nimport {Nav, Navbar} from 'react-bootstrap';\r\nimport Styled from 'styled-components';\r\n\r\nconst Styles = Styled.div `\r\n    .navbar {\r\n        background-color : #233;\r\n    }\r\n    .navbar-brand, .navbar-nav .nav-link {\r\n        color: #bbb;\r\n\r\n        &:hover {\r\n            color: white;\r\n        }\r\n    }\r\n`;\r\nconst NavigationBar = () => (\r\n    <Styles>\r\n        <Navbar expand= \"lg\">\r\n            <Navbar.Brand href=\"/\">Door Display</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls= \"basic-navbar-nav\"/>\r\n            <Navbar.Collapse id =\"basic-navbar-nav\">\r\n                <Nav className =\"ml-auto\">\r\n                    <Nav.Item><Nav.Link href ={`/home/${sessionStorage.getItem('session')}`}>Home</Nav.Link></Nav.Item>\r\n                    <Nav.Item><Nav.Link href ={`/message/${sessionStorage.getItem('display')}`}>Message</Nav.Link></Nav.Item>\r\n                    <Nav.Item><Nav.Link href =\"/about\">About</Nav.Link></Nav.Item>\r\n                </Nav> \r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    </Styles>\r\n)\r\nexport default NavigationBar;","import React from 'react';\r\nimport {Jumbotron, Container} from 'react-bootstrap';\r\nimport Styled from 'styled-components';\r\nimport techImage from '../images/tech.jpeg';\r\n\r\nconst Styles = Styled.div `\r\n    .jumbo {\r\n        background: url(${techImage}) no-repeat fixed bottom;\r\n        background-size: cover;\r\n        color:#ccc;\r\n        height: 200px;\r\n        position: relative;\r\n        z-index: -2;\r\n    }\r\n\r\n    .overlay{\r\n        background-color: #000;\r\n        opacity: 0.6;\r\n        position: absolute;\r\n        top:0;\r\n        right:0;\r\n        bottom: 0;\r\n        left: 0;\r\n        z-index: -1;\r\n\r\n    }\r\n`;\r\nconst Jumbo =()=>(\r\n    <Styles>\r\n        <Jumbotron fluid className=\"jumbo\">\r\n            <div className=\"overlay\"></div>\r\n            <Container>\r\n                <h1>Welcome</h1>\r\n                <p>Here you can send message to all your displays</p>\r\n            </Container> \r\n        </Jumbotron>\r\n    </Styles>\r\n);\r\nexport default Jumbo;","import React from 'react';\r\n\r\n\r\nconst Signup = (\r\n    {username, password, closePopup, handleUsernameChange, \r\n    handlePasswordChange, signupHandlar\r\n})=>{\r\n    return(\r\n        <div className={\"bg-modal\"}>\r\n            <div className={\"modal-pop-up\"}>\r\n                <div className=\"close\"  onClick={closePopup}>+</div>\r\n                <form className =\"username\" onSubmit={signupHandlar}>\r\n                    <input\r\n                        onChange ={handleUsernameChange} \r\n                        value={username}\r\n                        placeholder=\"username...\"\r\n                        type=\"text\"/>\r\n                    <input onChange ={handlePasswordChange} \r\n                        value={password}\r\n                        placeholder=\"passowrd...\"\r\n                        type=\"password\"/>\r\n                    <button  className={\"tbtn\"} \r\n                        onClick={signupHandlar}>\r\n                            Sign Up\r\n                    </button>   \r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signup;","import React, { Component } from 'react';\r\nimport Signup from '../presentation/signup';\r\nimport ReactDOM from 'react-dom';\r\nimport '../general.css'\r\nclass Login extends Component {\r\n    state = {  \r\n        username: \"\",\r\n        password:\"\",\r\n        sesseion:''\r\n    }\r\n    handleUsernameChange=(e)=>{\r\n        this.setState({username:e.target.value});\r\n    }\r\n\r\n    handlePasswordChange=(e)=>{\r\n        this.setState({password:e.target.value});\r\n    }\r\n    displayPopup=event=>{\r\n        event.preventDefault();\r\n        const node = ReactDOM.findDOMNode(this);\r\n        node.querySelector('.bg-modal').style.display= 'flex';\r\n    }\r\n\r\n    closePopup = event =>{\r\n        const node = ReactDOM.findDOMNode(this);\r\n        node.querySelector('.bg-modal').style.display= 'none';\r\n    }\r\n    handleLogin = e=>{\r\n        e.preventDefault();\r\n        let data = {username: this.state.username, pwd: this.state.password}\r\n        fetch('https://iot-display.herokuapp.com/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n            body: JSON.stringify(data)\r\n        }).then(response => {\r\n           return response.json();\r\n        }).then(data =>{\r\n            if (data.accepted){\r\n                this.props.history.push(`/home/${data.session}`);\r\n            }else {\r\n                alert('username already taken try again');\r\n            }\r\n            console.log(data);\r\n            \r\n        }).catch(error =>{ \r\n            alert('username already taken try again');\r\n            console.error('error', error)\r\n        });\r\n    }\r\n    signupHandlar = event =>{\r\n        event.preventDefault();\r\n        let data = {username: this.state.username, pwd: this.state.password}\r\n        fetch('https://iot-display.herokuapp.com/login/create', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n            body: JSON.stringify(data)\r\n        }).then(response => {\r\n           return response.json();\r\n        }).then(data =>{\r\n            if (data.accepted){\r\n                alert('successfuly created account');\r\n                this.closePopup();\r\n            }else {\r\n                alert('username already taken try again');\r\n            }\r\n            console.log(data);\r\n            \r\n        }).catch(error =>{ \r\n            alert('username already taken try again');\r\n            console.error('error', error)\r\n        });\r\n        \r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className=\"innerbox\">\r\n                 <form className =\"username\" onSubmit={this.handleLogin}>\r\n                        <input  onChange ={this.handleUsernameChange} \r\n                            value={this.state.username}\r\n                            placeholder=\"Enter username\"\r\n                            type=\"text\"/>\r\n                        <input  onChange ={this.handlePasswordChange} \r\n                            value={this.state.password}\r\n                            placeholder=\"Enter passowrd...\"\r\n                            type=\"password\"/>\r\n                        <div>\r\n                            <button className = \"tbtn\" onClick={this.handleLogin}>SIGN IN</button> \r\n                        </div>\r\n                        <button className=\"tbtn\" onClick={this.displayPopup}>Sign up</button>\r\n                            \r\n                    </form>\r\n                <Signup\r\n                    username={this.state.username}\r\n                    password={this.state.password}\r\n                    closePopup={this.closePopup}\r\n                    handleUsernameChange={this.handleUsernameChange}\r\n                    handlePasswordChange={this.handlePasswordChange}\r\n                    signupHandlar = {this.signupHandlar}\r\n                />\r\n\r\n            </div> \r\n        );\r\n    }\r\n}\r\n \r\nexport default Login;","import React, { Component } from 'react';\r\nimport{BrowserRouter as Router, Route} from \"react-router-dom\";\r\nimport Message from './components/message';\r\nimport About from './components/about';\r\nimport Displays from './components/displays';\r\nimport NavigationBar from './components/NavigationBar';\r\nimport Jumbo from './presentation/jumbo';\r\nimport Login from './components/Login'\r\nclass App extends Component {\r\n  state = {  }\r\n  render() { \r\n      return ( \r\n        <Router>\r\n          <NavigationBar/>\r\n          <Jumbo/>\r\n          <Route exact path ='/' component = {Login}/>\r\n          <Route exact path = '/home/:session' component={Displays}/>\r\n          <Route path = '/about' component={About}/>\r\n          <Route path = '/message/:selectedDisplay' component={Message}/>\r\n        </Router>\r\n    );\r\n  }\r\n}\r\n \r\nexport default App;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}